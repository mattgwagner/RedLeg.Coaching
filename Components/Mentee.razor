@if (card != null)
{
    <h1>@card.Name</h1>

    @foreach (var checklist in card.CheckLists.OrderByDescending(_ => _.Name))
    {
        <h2>@checklist.Name</h2>

        <ul class="list-group">
            @foreach (var item in checklist.CheckItems.OrderBy(i => i.State).ThenBy(i => i.Position))
            {
                var is_checked = item.State == Manatee.Trello.CheckItemState.Complete;

                <li class="list-group-item @(is_checked ? "disabled" : "")">
                    <form method="post" asp-page-handler="ToggleCheck">
                        <input hidden name="cardId" value="@card.Id" />
                        <input hidden name="checklistitem" value="@item.Id" />
                        <input hidden name="isChecked" value="@(is_checked ? "false" : "true")" />
                        <input type="checkbox" @(is_checked ? "checked=checked" : "" ) onchange="this.form.submit()" />
                        @item.Name
                    </form>
                </li>
            }

            <li>
                <input hidden name="checklist" value="@checklist.Id" />
                <input name="text" type="text" @bind-value="Text" />
                <button type="submit" class="btn btn-info btn-xs" @onclick="@(() => OnPostAddItem(checklist.Id))">Add</button>
            </li>
        </ul>
    }
}
else
{
    <span>Loading...</span>
}

@code {
    [Parameter]
    public string Id { get; set; }

    private string Text { get; set; }

    private Manatee.Trello.ICard card { get; set; }

    protected async Task ReloadCard()
    {
        card = new Manatee.Trello.Card(Id);

        await card.Refresh();
    }

    protected override Task OnInitializedAsync() => ReloadCard();

    protected async Task OnPostAddItem(string checklist)
    {
        var checklist_reference =
            card
            .CheckLists
            .Where(cl => cl.Id == checklist)
            .SingleOrDefault();

        if (checklist_reference != null)
        {
            await checklist_reference.CheckItems.Add(Text);
        }

        await ReloadCard();
    }

    protected async Task OnPostToggleCheck(string checklistitem, Boolean isChecked)
    {
        var checklistitem_reference =
            card
            .CheckLists
            .SelectMany(cli => cli.CheckItems)
            .Where(cli => cli.Id == checklistitem)
            .SingleOrDefault();

        if (checklistitem_reference != null)
        {
            checklistitem_reference.State = isChecked ? Manatee.Trello.CheckItemState.Complete : Manatee.Trello.CheckItemState.Incomplete;
        }

        await ReloadCard();
    }
}
